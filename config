# TODO: Montors are ordered incorrectly
# TODO: DP Monitor is flickering after login
# TODO: USB Hardware has to be reconnected after login to function
# TODO: When restarting, firefox is closed
# TODO: Wifi
# TODO: Bluetooth
# TODO: Start programs when starting sway

# Variables
# Modifiers: Mod1, Mod2, Mod3, Mod4, Mod5
set $mod Mod4
set $left h
set $down j
set $up k
set $right l
set $font "Droid Sans Mono Slashed for Powerline:style=Bold:size=12"
set $color_dark "#112233"
set $color_medium "#224466"
set $color_light "#55AAFF"
set $term alacritty
set $menu bemenu-run -p ">" --tb $color_medium --tf $color_light --fb $color_dark --ff $color_light --nb $color_medium --nf $color_light --hb $color_light --hf $color_dark | xargs swaymsg exec --

# Monitors
    output eDP-1    pos 1920 0 res 1920x1080
    output DP-1     pos 0    0 res 1920x1080
    output HDMI-A-1 pos 3840 0 res 1920x1080

    # Focus the center monitor
    focus output DP-1

    # Wallpaper
    # output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
    output "*" bg "#000000" solid_color

# Bindings
    # Keyboard
    # Modifiers: Mod1, Mod2, Mod3, Mod4, Mod5, Shift, Control
    # Syntax: bindsym  [--release] [<Group>+][<Modifiers>+]<keysym>  command
    #         bindcode [--release] [<Group>+][<Modifiers>+]<keycode> command
    bindsym $mod+p         exec $term
    bindsym $mod+Control+p exec $menu
    bindsym $mod+Control+q kill

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Control+Shift+a reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Control+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Control
    bindsym $mod+Control+$left move left
    bindsym $mod+Control+$down move down
    bindsym $mod+Control+$up move up
    bindsym $mod+Control+$right move right

    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Move focused container to workspace
    bindsym $mod+Control+1 move container to workspace number 1
    bindsym $mod+Control+2 move container to workspace number 2
    bindsym $mod+Control+3 move container to workspace number 3
    bindsym $mod+Control+4 move container to workspace number 4
    bindsym $mod+Control+5 move container to workspace number 5
    bindsym $mod+Control+6 move container to workspace number 6
    bindsym $mod+Control+7 move container to workspace number 7
    bindsym $mod+Control+8 move container to workspace number 8
    bindsym $mod+Control+9 move container to workspace number 9
    bindsym $mod+Control+0 move container to workspace number 10

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.
    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad
    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

    # Resizing Windows
    mode "resize" {
        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        bindsym $left resize shrink width 10px
        bindsym $down resize grow height 10px
        bindsym $up resize shrink height 10px
        bindsym $right resize grow width 10px

        # Ditto, with arrow keys
        bindsym Left resize shrink width 10px
        bindsym Down resize grow height 10px
        bindsym Up resize shrink height 10px
        bindsym Right resize grow width 10px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+r mode "resize"

    # Mouse
    # Modifiers: Mod1, Mod2, Mod3, Mod4, Mod5, Shift, Control
    # Syntax: bindsym [--release] [--border] [--whole-window] [--exclude-titlebar] [<Modifiers>+]button<n> command
    bindsym button3 kill

# Inputs
# swaymsg -t get_inputs
    input "type:keyboard" repeat_delay 250
    input "type:keyboard" repeat_rate 75

# Bar
bar {
    swaybar_command waybar

    # position bottom
    #
    # # When the status_command prints a new line to stdout, swaybar updates.
    # # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    #
    # colors {
    #     # TODO: Find documentation on available options here.
    #     statusline $color_light
    #     background $color_dark
    #     # TODO: text on active is white
    #     active_workspace $color_dark $color_medium $color_light
    #     # inactive_workspace #32323200 #32323200 #5c5c5c
    # }
}

include /etc/sway/config.d/*

# TODO:
### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

exec_always {
    wl-paste -t text --watch clipman store
    blueman-applet
    nm-applet --indicator
}

# exec_always --no-startup-id bash ./bin/start

# exec wl-paste -t text --watch clipman store
# exec waybar
# exec --no-startup-id blueman-applet
# exec "sleep 10; nm-applet --indicator"
